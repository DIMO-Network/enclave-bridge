name: build-enclave-image-prod
on:
  push:
    tags:
      - v*
  workflow_dispatch:

env:
  APP_NAME: sample-enclave-api

jobs:
  build-app:
    name: build-app
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true

      - name: Build and push enclave app
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/app/Dockerfile
          push: true
          load: false
          platforms: linux/amd64
          build-args: |
            APP_NAME=${{ env.APP_NAME }}
          tags: dimozone/${{ env.APP_NAME }}:${{ steps.tag.outputs.tag }}, dimozone/${{ env.APP_NAME }}:latest

  build-enclave:
    name: build-enclave
    runs-on: [self-hosted]
    needs: build-app
    outputs:
      measurements: ${{ steps.build_enclave.outputs.measurements }}
    container:
      image: dimozone/nitro-enclave-builder:latest
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      volumes:
        - /node20217:/node20217
        - /node20217:/__e/node20
    steps:
      - name: Install dependencies
        run: yum install -y curl git tar gunzip xz wget
      - name: Print GLIBC version
        run: ldd --version
      - name: Install Node.js 20 glibc2.17
        run: |
          curl -LO https://unofficial-builds.nodejs.org/download/release/v20.9.0/node-v20.9.0-linux-x64-glibc-217.tar.xz
          tar -xf node-v20.9.0-linux-x64-glibc-217.tar.xz --strip-components 1 -C /node20217
          ldd /__e/node20/bin/node
      - uses: actions/checkout@v4
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      - name: Create bin directory
        run: mkdir -p bin
      - name: Build enclave
        id: build_enclave
        run: |
          nitro-cli build-enclave --docker-uri dimozone/${{ env.APP_NAME }}:${{ steps.tag.outputs.tag }} --output-file bin/${{ env.APP_NAME }}.eif > enclave_output.txt
          MEASUREMENTS=$(grep -A 10 '"Measurements"' enclave_output.txt | sed -n '/"Measurements"/,/  }/p')
          echo "measurements<<EOF" >> $GITHUB_OUTPUT
          echo "$MEASUREMENTS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          cat enclave_output.txt
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}
          path: bin/${{ env.APP_NAME }}.eif

  build-final-image:
    name: build-final-image
    runs-on: [ubuntu-latest]
    needs: build-enclave
    steps:
      - uses: actions/checkout@v4
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}
          path: bin/${{ env.APP_NAME }}.eif
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/enclave-runner/Dockerfile
          build-args: |
            APP_NAME=${{ env.APP_NAME }}
          push: true
          platforms: linux/amd64
          tags: dimozone/${{ env.APP_NAME }}-enclave:${{ steps.tag.outputs.tag }}, dimozone/${{ env.APP_NAME }}-enclave:latest
      - name: Update image version
        uses: fjogeleit/yaml-update-action@v0.16.0
        with:
          valueFile: "charts/sample-enclave-api/values-prod.yaml"
          value: ${{ steps.tag.outputs.tag }}
          branch: main
          message: "Update Image Version to ${{ steps.tag.outputs.tag }}\n\n${{ needs.build-enclave.outputs.measurements }}"
          changes: |
            {
              "app.image.tag": "${{ steps.tag.outputs.tag }}",
              "bridge.image.tag": "${{ steps.tag.outputs.tag }}"
            }
