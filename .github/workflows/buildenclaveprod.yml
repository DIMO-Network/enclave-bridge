name: build-enclave-image-prod
on:
  push:
    tags:
      - v*
  workflow_dispatch:
jobs:
  build-app:
    name: build-runtime
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true

      - name: Build and push enclave app
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/runtime-dockerfile
          push: true
          load: false
          platforms: linux/amd64
          tags: dimozone/sample-enclave-runtime:${{steps.tag.outputs.tag}}, dimozone/sample-enclave-runtime:latest

  build-enclave:
    name: build-enclave
    runs-on: [self-hosted]
    needs: build-app
    container:
      image: dimozone/nitro-enclave-builder:latest
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      volumes:
        - /node20217:/node20217
        - /node20217:/__e/node20
    steps:
      - name: Install dependencies
        run: yum install -y curl git tar gunzip xz wget
      - name: Print GLIBC version
        run: ldd --version
      - name: Install Node.js 20 glibc2.17
        run: |
          curl -LO https://unofficial-builds.nodejs.org/download/release/v20.9.0/node-v20.9.0-linux-x64-glibc-217.tar.xz
          tar -xf node-v20.9.0-linux-x64-glibc-217.tar.xz --strip-components 1 -C /node20217
          ldd /__e/node20/bin/node
      - uses: actions/checkout@v4
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      - name: Create bin directory
        run: mkdir -p bin
      - name: Build enclave
        run: nitro-cli build-enclave --docker-uri dimozone/sample-enclave-runtime:${{steps.tag.outputs.tag}} --output-file bin/sample-enclave-app.eif
      - uses: actions/upload-artifact@v4
        with:
          name: sample-enclave-app
          path: bin/sample-enclave-app.eif

  build-final-image:
    # The type of runner that the job will run on
    name: build-final-image
    runs-on: [self-hosted]
    needs: build-enclave
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2   
 
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      
      - uses: actions/download-artifact@v4
        with:
          name: sample-enclave-app
          path: bin/sample-enclave-app.eif

      - name: Display structure of downloaded files
        run: ls -R

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/enclave-dockerfile
          push: true
          platforms: linux/amd64
          tags: dimozone/sample-enclave-app:${{steps.tag.outputs.tag}}, dimozone/sample-enclave-app:latest

      - name: Update Image Version in the worker HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@v0.16.0
        with:
          valueFile: "charts/sample-enclave-api/values.yaml"
          propertyPath: "enclave.image.tag"
          value: ${{steps.tag.outputs.tag}}
          branch: main
          message: "Update Image Version to ${{steps.tag.outputs.tag}}"
