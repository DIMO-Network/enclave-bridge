name: build-enclave-image-dev
on:
  push:
    branches:
      - main
  workflow_dispatch:


env:
  ACTIONS_RUNNER_FORCED_INTERNAL_NODE_VERSION: node18
  ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node18
  # ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  build-app:
    name: build-runtime
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"

      - name: Build and push enclave app
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/runtime-dockerfile
          push: true
          load: false
          platforms: linux/amd64
          tags: dimozone/sample-enclave-runtime:${{ steps.slug.outputs.sha7 }}, dimozone/sample-enclave-runtime:latest

  build-enclave:
    name: build-enclave
    runs-on: [self-hosted]
    needs: build-app
    container:
      image: amazonlinux:2
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      volumes:
        - ${{ github.workspace }}/build/output:/build/output
        - /node20217:/node20217
        - /node20217:/__e/node20
    steps:
      - name: Install dependencies
        run: yum install -y curl git tar gunzip xz wget
      - name: Print GLIBC version
        run: ldd --version
      - name: Install Node.js 20 glibc2.17
        run: |
          curl -LO https://unofficial-builds.nodejs.org/download/release/v20.9.0/node-v20.9.0-linux-x64-glibc-217.tar.xz
          tar -xf node-v20.9.0-linux-x64-glibc-217.tar.xz --strip-components 1 -C /node20217
      - name: Install Nitro CLI
        run: |
          amazon-linux-extras install aws-nitro-enclaves-cli docker -y
          yum install aws-nitro-enclaves-cli-devel jq util-linux unzip curl which file -y
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"
      - name: Build enclave
        run: nitro-cli build-enclave --docker-uri dimozone/sample-enclave-runtime:${{ steps.slug.outputs.sha7 }} --output-file /bin/sample-enclave-app.eif
      - uses: actions/upload-artifact@v4
        with:
          name: sample-enclave-app
          path: ${{ github.workspace }}/bin/sample-enclave-app.eif

  build-final-image:
    # The type of runner that the job will run on
    name: build-final-image
    runs-on: [self-hosted]
    needs: build-enclave
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2   
 
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"
      
      - uses: actions/download-artifact@v4
        with:
          name: sample-enclave-app
          path: ${{ github.workspace }}/bin/

      - name: Display structure of downloaded files
        run: ls -R

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/enclave-dockerfile
          push: true
          platforms: linux/amd64
          tags: dimozone/sample-enclave-app:${{ steps.slug.outputs.sha7 }}, dimozone/sample-enclave-app:latest

      - name: Update Image Version in the worker HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: "charts/sample-enclave-api/values.yaml"
          propertyPath: "enclave.image.tag"
          value: ${{ steps.slug.outputs.sha7 }}
          branch: main
          message: "Update Image Version to ${{ steps.slug.outputs.sha7 }}"
